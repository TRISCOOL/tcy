<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tcy.common.mapper.ShoppingCartMapper" >
  <resultMap id="BaseResultMap" type="tcy.common.model.ShoppingCart" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="product_id" property="productId" jdbcType="BIGINT" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="cost" property="cost" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="is_appraise" property="isAppraise" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, product_id, num, cost, status, order_id, is_appraise
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from shopping_cart
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from shopping_cart
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="tcy.common.model.ShoppingCart" >
    insert into shopping_cart (id, user_id, product_id, 
      num, cost, status, 
      order_id, is_appraise)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, 
      #{num,jdbcType=INTEGER}, #{cost,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, 
      #{orderId,jdbcType=BIGINT}, #{isAppraise,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="tcy.common.model.ShoppingCart" >
    insert into shopping_cart
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="isAppraise != null" >
        is_appraise,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="isAppraise != null" >
        #{isAppraise,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tcy.common.model.ShoppingCart" >
    update shopping_cart
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="isAppraise != null" >
        is_appraise = #{isAppraise,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tcy.common.model.ShoppingCart" >
    update shopping_cart
    set user_id = #{userId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      num = #{num,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      order_id = #{orderId,jdbcType=BIGINT},
      is_appraise = #{isAppraise,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listShoppingCartByUserId" resultType="tcy.common.model.ShoppingCart">
    SELECT
      sc.*,
      cc.description AS ccDescription,
      cc.size_value,
      cc.color_value,
      p.`name` AS productName,
      p.brands,
      p.description AS proudctDescription,
      pi.url AS imageUrl
    FROM
      shopping_cart sc
    LEFT JOIN
      clothing_config cc ON sc.product_id = cc.id
    LEFT JOIN
      product p ON cc.product_id = p.id
    LEFT JOIN
      product_img pi ON p.id = pi.product_id
    LEFT JOIN
      clothing_size cs ON cc.size_id = cs.id
    LEFT JOIN
      color co ON cc.color_id = co.id
    WHERE
      sc.status = 0
    AND sc.user_id = #{userId}
    AND pi.type = 1
  </select>

  <update id="deleteAllByUserId">
    UPDATE shopping_cart SET status = 3 WHERE user_id = #{userId} AND status = 0
  </update>

  <select id="selectProductDetailsWithOrder" resultType="tcy.common.model.ProductVo">
    SELECT
    p.id AS productId,
    p.`name`,
    p.description,
    p.sell_num,
    p.brands,
    p.retail_price,
    pi.url,
    cs.description,
    co.`value`,
    sc.num,
    sc.cost,
    cc.id AS ccId,
    sc.id AS scId
FROM
    shopping_cart sc
        LEFT JOIN
    clothing_config cc ON sc.product_id = cc.id
        LEFT JOIN
    clothing_size cs ON cc.size_id = cs.id
        LEFT JOIN
    color co ON cc.color_id = co.id
        LEFT JOIN
    product p ON cc.product_id = p.id
        LEFT JOIN
    product_img pi ON pi.product_id = p.id
WHERE
    sc.order_id = #{orderId} AND pi.type = 1
  </select>
</mapper>